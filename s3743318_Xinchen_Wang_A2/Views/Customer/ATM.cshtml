@model ATMViewModel
@{
    ViewData["Title"] = "ATM";
}

<h1 class="display-4">ATM</h1>

<h1>Transaction Detail</h1>
<div class="col-md-4">
    <form asp-action="ATM">
        <div asp-validation-summary="All" class="text-danger"></div>
        <div class="form-group">
            @* Transaction Type selection *@
            <div class="mt-2 transaction-type-field align-items-start">
                <h5 for="TransactionType" class="control-label ">Transaction Type: </h5>
                <select id="transactionType" name="transactionType" class="form-control form-control-sm mt-2" 
                        data-style="btn-primary" data-val-required="The Transaction Type field is required." required>
                    <option value="">---- Select Transaction Type ----</option>
                    <option value="@TransactionType.Deposit">@TransactionType.Deposit</option>
                    <option value="@TransactionType.Withdraw">@TransactionType.Withdraw</option>
                    <option value="@TransactionType.Transfer">@TransactionType.Transfer</option>
                </select>
                @Html.ValidationMessage("transactionType", new { @class = "text-danger text-nowrap" })
            </div>

            @* Account from selection *@
            <div class="mt-2 from-account-field align-items-start">
                <h5 for="AccountFrom" class="control-label ">Account: </h5>
                <select id="fromAccountNumber" name="fromAccountNumber" class="form-control form-control-sm mt-2"
                        data-val-required="The Account field is required." required>
                    <option value="">---- Select Account ----</option>
                    @foreach (var account in Model.Accounts)
                    {
                        if (account.AccountStatus == Status.Locked)
                        {
                            <option value="@account.AccountNumber" disabled>@account.AccountNumber - @account.AccountType</option>
                        }
                        else
                        {
                            <option value="@account.AccountNumber">@account.AccountNumber - @account.AccountType</option>
                        }
                    }
                </select>
                @Html.ValidationMessage("transactionType", new { @class = "text-danger text-nowrap" })        
            </div>

            @* Account to selection *@
            <div class="mt-2 to-account-field align-items-start" id="to-account-field">
                <h5 for="AccountTo" class="control-label ">To Account: </h5>
                <select id="toAccountNumber" name="toAccountNumber" class="form-control form-control-sm mt-2"
                        data-val-required="The Account field is required." required>
                    <option value="">---- Select Account To ----</option>
                    @foreach (var account in Model.AllAccounts)
                    {
                        <option value="@account.AccountNumber"> @account.AccountType - @account.AccountNumber </option>
                    }
                </select>
                @Html.ValidationMessage("toAccountNumber", new { @class = "text-danger" })
            </div>

            @* Commnet input *@
            <div class="mt-2 comment-field align-items-start">
                <h5 for="Comment" class="control-label ">Comment (Option)</h5>
                <textarea id="Comment" name="Comment" class="form-control mt-2" type="text"></textarea>
            </div>
            
            @* Amount input *@
            <div class="mt-2 amount-field align-items-start">
                <h5 for="Amount" class="control-label ">Amount: </h5>
                <input id="Amount" name="Amount" class="form-control mt-2" value="@ViewBag.Amount?.ToString("0.00")"
                       data-val="true" data-val-number="The field Amount must be a number."
                       data-val-required="The Amount field is required." />
                @Html.ValidationMessage("Amount", new { @class = "text-danger" })
            </div>
        </div>
    
        <div class="form-group">
            <input type="submit" value="Procced" class="btn btn-primary" />
        </div>
    </form>
</div>
<div>
    <a asp-action="Index">Back to Accounts</a>
</div>



@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }

    <script>
        // change account to selection based on account from selection
        // to avoid transfer to the same account validation
        $(function () {
            $("#to-account-field").hide();

            $('select').on('change', function (event) {
                //restore previously selected value
                var prevValue = $(this).data('previous');
                $('select').not(this).find('option[value="' + prevValue + '"]').show();
                //hide option selected                
                var value = $(this).val();
                //update previously selected data
                $(this).data('previous', value);
                $('select').not(this).find('option[value="' + value + '"]').hide();

                var field = $("#transactionType").val();

                if (field === "Transfer") {
                    $("#to-account-field").show();
                } else {
                    $("#to-account-field").hide();
                }
                
            });

        });


    </script>
}